

# This file was *autogenerated* from the file singular_curves_solver.sage
from sage.all_cmdline import *   # import sage library

_sage_const_64518969972801749135824756448131493706734389469270250066663086832435514842479 = Integer(64518969972801749135824756448131493706734389469270250066663086832435514842479); _sage_const_31986780550433799412677941858823423462114675892648377547683577577089459947957 = Integer(31986780550433799412677941858823423462114675892648377547683577577089459947957); _sage_const_11509231773975864622155000847426450160467982025545638320872552222838673248549 = Integer(11509231773975864622155000847426450160467982025545638320872552222838673248549); _sage_const_52347810026255191041494102208234452298246597815932773934750056493671410990362 = Integer(52347810026255191041494102208234452298246597815932773934750056493671410990362); _sage_const_63777206219972690354649649026733602083638434210540402295106809436445953625387 = Integer(63777206219972690354649649026733602083638434210540402295106809436445953625387); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_4 = Integer(4); _sage_const_27 = Integer(27); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1)
p = _sage_const_64518969972801749135824756448131493706734389469270250066663086832435514842479 
F = GF(p)
gx = F(_sage_const_31986780550433799412677941858823423462114675892648377547683577577089459947957 )
gy = F(_sage_const_11509231773975864622155000847426450160467982025545638320872552222838673248549 )
px = F(_sage_const_52347810026255191041494102208234452298246597815932773934750056493671410990362 )
py = F(_sage_const_63777206219972690354649649026733602083638434210540402295106809436445953625387 )

a = ((gy**_sage_const_2  - py**_sage_const_2 )-(gx**_sage_const_3  - px**_sage_const_3 ))/(gx - px)
b = gy**_sage_const_2  - (gx**_sage_const_3  + a*gx)
#a,b = -3,2
print(a,b)

D = _sage_const_4 *(a**_sage_const_3 ) + _sage_const_27 *(b**_sage_const_2 )
print(D==_sage_const_0 )

P = F['x']; (x,) = P._first_ngens(1)
f = x**_sage_const_3  + a*x + b
f_factors = f.factor()
r = F(f_factors[_sage_const_1 ][_sage_const_0 ] - x)
f_ = f.subs(x=x-r)
ff = f_.factor()

t = F(ff[_sage_const_0 ][_sage_const_0 ]-x).square_root()
u = ((gy + t*(gx+r))/(gy - t*(gx+r)))
v = ((py + t*(px+r))/(py - t*(px+r)))
print(u,v)

n = discrete_log(v, u)
print(n)

